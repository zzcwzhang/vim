snippet cs
	const $1 = styled.div\`
		$2
	\`;

snippet imc
	import $1 from 'components/$1';
snippet imo
	import hash from 'object-hash';
snippet imh
	import $1 from 'hooks/$1';
snippet imsc
	import $1 from 'shared/components/$1';
snippet imsh
	import $1 from 'shared/hooks/$1';
snippet imsu
	import $1 from 'shared/utils/$1';
snippet imicon
	import { $1 } from 'outlines-icons';
snippet imob
	import { useObserver } from 'mobx-react';
	import { unstable_batchedUpdates } from 'react-dom';
snippet uS
	const [$1, set$1] = useState($2);
snippet uE
	useEffect(() => {
		$1
	});
snippet uEv
	useEffect(() => {
		console.info('$1 update:', $1);
	}, [$1]);
snippet uC
	const $1 = useCallback(() => {
		$2
	});
snippet uM
	const ${1} = useMemo(() => {
		${2}
	});
snippet ir
	import React from 'react';

snippet h//
	{/* $1 */}
snippet imsb
	import styled from 'styled-components';
	import breakpoint from 'styled-components-breakpoint';


snippet shook
	import _ from 'lodash';
	import styled from 'styled-components';
	import React, { useState, useCallback, useMemo, useEffect } from 'react';

	export default function $1(props) {
		const { data, ...rest } = props;
		const [index, setIndex] = useState(0);

		const handleClick = useCallback(() => {
			setIndex(index + 1);
		})

		useEffect(() => {

		}, [data])

		return (
			<Wrapper {...rest} >
				{index}
				<button onClick={handleClick}>click</button>
			</Wrapper>
		);
	}

	const Wrapper = styled.div\`
		width: 100%;
	\`;


snippet shookpage
	import _ from 'lodash';
	import React, { useState, useCallback, useMemo, useEffect } from 'react';
	import { Switch, Route } from 'react-router-dom';
	import styled from 'styled-components';

	import CenteredContent, { Page } from 'components/CenteredContent';
	import LoadingPlaceholder from 'components/LoadingPlaceholder';
	import Header from 'components/Header';

	import useRouter from 'shared/hooks/useRouter';
	// child router
	import ChildrenPage from 'some/page/ChildrenPage';

	export default function $1(props) {
		// 路由
		const router = useRouter();
		const { path, url } = router;

		useEffect(() => {
			// ...
		}, [])


		return (
			<Page>
				<CenteredContent backgroundTheme="grey">
					<Header title="标题" alwaysShowTitle />
					<Wrapper>
						<Switch>
							{/* 默认路由 */ }
							<Route exact path={path}>
								<LoadingPlaceholder />
							</Route>
							<Route exact={true} path={\`${url}/child1\`}>
								<ChildrenPage />
							</Route>
						</Switch>
					</Wrapper>
				</CenteredContent>
			</Page>
		);
	}

	const Wrapper = styled.div\`
		width: 100%;
		padding: 20px;
		height: calc(100vh - 49px);
	\`;


snippet useAntdModal
	import _ from 'lodash';
	import styled from 'styled-components';
	import React, { useState, useCallback, useMemo, useEffect } from 'react';
	import { Modal } from 'antd';
	import useBoolean from 'hooks/useBoolean';

	export default function useSectionEditor(props) {
		const { data, handleSubmit } = props;
		const [visible, turnOn, turnOff] = useBoolean(false);

		const handleOk = useCallback(async () => {
			console.log('ok')
			if (_.isFunction(handleSubmit)) {
				await handleSubmit();
			}
			turnOff();
		}, [data, handleSubmit])

		const handleCancel= useCallback(() => {
			console.log('cancel')
			turnOff();
		}, [data]);

		useEffect(() => {
		}, [data, handleSubmit])

		const dom = useMemo(() => (
			<Modal
				title="编组分组"
				visible={visible}
				onOk={handleOk}
				onCancel={handleCancel}
			>
				<Wrapper >
					HelloWorld
				</Wrapper>
			</Modal>
		), [data, visible, handleSubmit]);

		return [dom, turnOn, turnOff];
	}

	const Wrapper = styled.div\`
		width: 100%;
	\`;

snippet sdiv
	const $1 = styled.div\`
		${2}
	\`

snippet sicon
	import React from "react";
	import Icon from "./Icon";
	import type { Props } from "./Icon";

	export default function IconFont(props) {
		return (
		<Icon {...props}>
			$1
		</Icon>
		);
	}

snippet esline
	/* eslint-disable-next-line */

